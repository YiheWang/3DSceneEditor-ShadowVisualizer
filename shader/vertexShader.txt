#version 330

layout (location = 0) in vec3 pos;
layout (location = 1) in vec3 color;
layout (location = 2) in vec3 norm;
layout (location = 3) in vec2 tex;

out vec4 vColor;
out vec3 Normal;
out vec3 FragPos;
out vec2 TexCoord;
out vec4 DirectionalLightSpacePos;

uniform mat4 model;
uniform mat4 projection;
uniform mat4 view;
uniform mat4 directionalLightTransform;

uniform int isFlatShading;
uniform vec3 triangleNormal;

void main()
{

    gl_Position = projection * view * model * vec4(pos, 1.0);
    DirectionalLightSpacePos = directionalLightTransform * model * vec4(pos, 1.0);
    vColor = vec4(color, 1.0f);
    if(isFlatShading == 1){
        Normal = mat3(transpose(inverse(model))) * triangleNormal;
    }
    else {
        Normal = mat3(transpose(inverse(model))) * norm;
    }
    FragPos = (model * vec4(pos, 1.0)).xyz;
    TexCoord = tex;
}